# It is tool for auditing the Security Policy Settings.
# all the files should be in one folder
# List of the policies to check should be in file named 'SecurityPolicies.txt'
# Exported Security Policy of the client should be named in format 'IPAddress.secpol' ie 192.168.0.1.secpol
# All the Exported Policy should be in same folder.
# usage python SecurityPolicyChecker.py
import sys, os;


def fileLineToList(fname):  # returns list of lines from text file named fname
    with open(fname) as f:
        contents = [x.strip("\n") for x in f.readlines()]
    return contents;


def splitByEquals(line):  # returns like "MinPassLength=8" --> ("MinpassLength","8")
    return [x.strip(" ") for x in line.split("=")];


def tuplizeSecpol(lines):
    tuples = [];
    for line in lines:
        if("=" in line):
            tupl = splitByEquals(line);
            tuples.append(tupl);
    return tuples;


def policyCheckForOne(clientFileName, standardPoliciesToCheck):
    ip = clientFileName.split("\\")[-1].replace(".secpol", "");  # IPFileName.secpol --> IPFileName
    checkedResults = [];
    clientPolicies = tuplizeSecpol(fileLineToList(clientFileName));  # List of (SecPolName,Value)
    for clientPolicy in clientPolicies:
        for standardPolicy in standardPoliciesToCheck:
            if (standardPolicy == clientPolicy[0]):
                checkedResults.append((ip, clientPolicy[0], clientPolicy[1]))
    return checkedResults;


def getAllCombinedResults():  # list of (ip,policyNmae,policyStatus) for all IPs.
    standardPolicies = fileLineToList(os.getcwd() + "\\SecurityPolicies.txt");  # the stanadard policies to check.
    allCombinedResult = [];
    for f in [x for x in os.listdir(os.getcwd()) if x.endswith('.secpol')]:  # Get all '.secpol' file from current directory
        resultF = policyCheckForOne(os.getcwd()+"\\"+f, standardPolicies);  # returns list (IP,policyName,policyStatus)
        for r in resultF:
            allCombinedResult.append(r);
    return allCombinedResult;


def allNotConfigured():
    allResults = getAllCombinedResults();  # list of (IP,policyName,PolicyStatus) for all ips;

    standardPolicies = fileLineToList(os.getcwd() + "\SecurityPolicies.txt");  # the stanadard policies to check.
    ipsCombined = [];
    for s in standardPolicies:
        tempIPCombined = (s, []);
        for a in allResults:
            if (s == a[1] and a[2] == "0"):  # this determines which policy to say not configured or which to keep
                tempIPCombined[1].append(a[0]);
        ipsCombined.append(tempIPCombined);
    return ipsCombined;


def start():
    ipCombinedConfiguration = allNotConfigured();  # list of (policyName,[list of IPs])
    for i in ipCombinedConfiguration:
        if len(i[1]) > 0:
            print "\"" + i[0] + "\" Policy is NOT CONFIGURED.";
            temp = "";
            for ip in i[1]:
                temp += ip + ", ";
            print temp;


start();
